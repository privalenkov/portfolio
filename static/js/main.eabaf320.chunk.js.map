{"version":3,"sources":["images/2.jpg","images/3.jpg","images/4.jpg","components/pages/Web.jsx","components/pages/Illustration.jsx","components/Imgplate.jsx","components/ImgplateList.jsx","components/fixtures.jsx","components/pages/About.jsx","components/index.jsx","components/pages/Game.jsx","App.js","serviceWorker.js","index.js","images/1.jpg"],"names":["module","exports","Web","Illustration","className","Imgplate","props","plate","TransitionGroup","CSSTransition","appear","timeout","classNames","href","title","src","image","alt","ImgplateList","plateElements","imgplates","map","index","key","img1","img2","img3","About","routes","path","name","Component","Imgplates","Menu","route","as","NavLink","to","activeClassName","exact","id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,+B,mBCA3CD,EAAOC,QAAU,IAA0B,+B,sHCA3CD,EAAOC,QAAU,IAA0B,+B,yICc5BC,MAZf,WACE,OACE,oCACE,mCACA,sJCYSC,MAhBf,WACE,OACE,oCACA,yBAAKC,UAAU,SACb,4CACA,yR,sBCmBSC,MAtBf,SAAkBC,GAAQ,IACjBC,EAASD,EAATC,MACP,OACE,oCAEA,kBAACC,EAAA,EAAD,CAAiBJ,UAAU,mBACzB,kBAACK,EAAA,EAAD,CACEC,QAAQ,EACRC,QAAS,IACTC,WAAW,QAEX,yBAAKR,UAAU,QACb,uBAAGS,KAAK,KAAI,yBAAKT,UAAU,YAAW,yBAAKA,UAAU,eAAeG,EAAMO,SAC1E,yBAAKC,IAAMR,EAAMS,MAAOC,IAAMV,EAAMO,aCH/BI,MAXf,YAAsC,IAC5BC,EAD2B,EAAbC,UACYC,KAAI,SAACd,EAAOe,GAAR,OAChC,kBAAC,EAAD,CAAUC,IAAMD,EAAOf,MAASA,OAEpC,OACI,oCACKY,I,kDCHE,G,MAAA,CACX,CACI,MAASK,IACT,MAAS,wHAEb,CACI,MAASC,IACT,MAAS,6FAEb,CACI,MAASC,IACT,MAAS,iEAEb,CACI,MAASF,IACT,MAAS,wHAEb,CACI,MAASC,IACT,MAAS,6FAEb,CACI,MAASC,IACT,MAAS,iEAEb,CACI,MAASF,IACT,MAAS,wHAEb,CACI,MAASA,IACT,MAAS,wHAEb,CACI,MAASA,IACT,MAAS,wHAEb,CACI,MAASC,IACT,MAAS,6FAEb,CACI,MAASC,IACT,MAAS,mEChCFC,ICRTC,EAAS,CACb,CAAEC,KAAM,SAAUC,KAAM,MAAOC,UAAW7B,GAC1C,CAAE2B,KAAM,gBAAiBC,KAAM,eAAgBC,UAAW5B,GAC1D,CAAE0B,KAAM,QAASC,KAAM,OAAQC,UCPjC,WACE,OACE,oCACE,kBAAC,EAAD,CAAcX,UAAaY,ODK/B,CAAEH,KAAM,SAAUC,KAAM,QAASC,UDXnC,WACE,OACE,oCACE,qCACA,+WCwDSE,MA9Cf,WACE,OACE,kBAAC,IAAD,KACE,oCACE,gCACE,yBAAK7B,UAAU,UACX,yBAAKA,UAAU,QAAO,uBAAGS,KAAK,KAAR,4GACtB,yBAAKT,UAAU,QACX,wBAAIA,UAAU,aACXwB,EAAOP,KAAI,SAAAa,GAAK,OACf,kBAAC,IAAD,CACEX,IAAKW,EAAML,KACXM,GAAIC,IACJC,GAAIH,EAAML,KACVS,gBAAgB,UAChBC,OAAK,GAEJL,EAAMJ,aAOvB,yBAAKU,GAAG,aACHZ,EAAOP,KAAI,gBAAGQ,EAAH,EAAGA,KAAME,EAAT,EAASA,UAAT,OACR,kBAAC,IAAD,CAAOR,IAAKM,EAAMU,OAAK,EAACV,KAAMA,GAW9B,kBAACE,EAAD,cExCDU,E,uKARX,OACE,yBAAKrC,UAAU,OACb,kBAAC,EAAD,W,GAJU2B,aCSEW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBEzI5B7D,EAAOC,QAAU,IAA0B,gC","file":"static/js/main.eabaf320.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/2.10c27603.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.3ff7b41c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.860bf235.jpg\";","import React from 'react'\r\n\r\nfunction Web() {\r\n  return (\r\n    <>\r\n      <h1>Web</h1>\r\n      <p>\r\n        Aliquam iaculis a nisi sed ornare. Sed venenatis tellus vel consequat\r\n        congue. In bibendum vestibulum orci et feugiat.\r\n      </p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Web\r\n","import React from 'react'\r\n\r\nfunction Illustration() {\r\n  return (\r\n    <>\r\n    <div className=\"block\">\r\n      <h1>Illustration</h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam aliquet,\r\n        purus vitae eleifend tristique, lorem magna volutpat orci, et vehicula\r\n        erat erat nec elit. Aenean posuere nunc ac cursus facilisis. Aenean vel\r\n        porta turpis, ut iaculis justo.\r\n      </p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Illustration\r\n","import React from 'react'\r\nimport {CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport '../style/imgplate.css';\r\n\r\nfunction Imgplate(props) {\r\n  const {plate} = props\r\n  return (\r\n    <>\r\n    \r\n    <TransitionGroup className=\"plate-container\">\r\n      <CSSTransition\r\n        appear={true}\r\n        timeout={300}\r\n        classNames=\"fade\"\r\n      >\r\n        <div className=\"imga\">\r\n          <a href=\" \"><div className=\"bg-plate\"><div className=\"title-plate\">{plate.title}</div></div></a>\r\n          <img src= {plate.image} alt= {plate.title}/>\r\n        </div>\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default Imgplate\r\n","import React from 'react'\r\nimport Imgplate from './Imgplate'\r\n\r\nfunction ImgplateList({ imgplates }) {\r\n    const plateElements = imgplates.map((plate, index) =>\r\n        <Imgplate key= {index} plate = {plate}/>\r\n    )\r\n    return (\r\n        <>\r\n            {plateElements}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImgplateList\r\n","\r\nimport img1 from '../images/1.jpg'\r\nimport img2 from '../images/2.jpg'\r\nimport img3 from '../images/3.jpg'\r\nimport img4 from '../images/4.jpg'\r\n\r\nexport default [\r\n    {\r\n        \"image\": img1,\r\n        \"title\": \"Концепт проект морико\"\r\n    },\r\n    {\r\n        \"image\": img2,\r\n        \"title\": \"Концепт проект minecraft\"\r\n    },\r\n    {\r\n        \"image\": img3,\r\n        \"title\": \"дзиайн иршы\"\r\n    },\r\n    {\r\n        \"image\": img1,\r\n        \"title\": \"Концепт проект морико\"\r\n    },\r\n    {\r\n        \"image\": img2,\r\n        \"title\": \"Концепт проект minecraft\"\r\n    },\r\n    {\r\n        \"image\": img3,\r\n        \"title\": \"дзиайн иршы\"\r\n    },\r\n    {\r\n        \"image\": img1,\r\n        \"title\": \"Концепт проект морико\"\r\n    },\r\n    {\r\n        \"image\": img1,\r\n        \"title\": \"Концепт проект морико\"\r\n    },\r\n    {\r\n        \"image\": img1,\r\n        \"title\": \"Концепт проект морико\"\r\n    },\r\n    {\r\n        \"image\": img2,\r\n        \"title\": \"Концепт проект minecraft\"\r\n    },\r\n    {\r\n        \"image\": img3,\r\n        \"title\": \"дзиайн иршы\"\r\n    },\r\n]","import React from 'react'\r\n\r\nfunction About() {\r\n  return (\r\n    <>\r\n      <h1>About</h1>\r\n      <p>\r\n        Donec sit amet augue at enim sollicitudin porta. Praesent finibus ex\r\n        velit, quis faucibus libero congue et. Quisque convallis eu nisl et\r\n        congue. Vivamus eget augue quis ante malesuada ullamcorper. Sed orci\r\n        nulla, eleifend eget dui faucibus, facilisis aliquet ante. Suspendisse\r\n        sollicitudin nibh lacus, ut bibendum risus elementum a.\r\n      </p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom'\nimport {CSSTransition, TransitionGroup } from 'react-transition-group'\nimport '../style/index.css';\nimport Web from './pages/Web'\nimport Illustration from './pages/Illustration'\nimport Game from './pages/Game'\nimport About from './pages/About'\n\nconst routes = [\n  { path: '/react', name: 'WEB', Component: Web },\n  { path: '/Illustration', name: 'ILLUSTRATION', Component: Illustration },\n  { path: '/Game', name: 'GAME', Component: Game },\n  { path: '/About', name: 'ABOUT', Component: About },\n]\n\nfunction Menu() {\n  return (\n    <Router>\n      <>\n        <header>\n          <div className=\"header\">\n              <div className=\"logo\"><a href=\" \">Кирилл Приваленков</a></div>\n              <nav className=\"menu\">\n                  <ul className=\"menu-main\">\n                    {routes.map(route => (\n                      <NavLink \n                        key={route.path}\n                        as={NavLink}\n                        to={route.path}\n                        activeClassName=\"current\"\n                        exact\n                      >\n                        {route.name}\n                      </NavLink >\n                    ))}\n                  </ul>\n              </nav>\n          </div>\n        </header>\n        <div id=\"container\">\n            {routes.map(({ path, Component }) => (\n                <Route key={path} exact path={path}>\n                {/* {({ match }) => (\n                    <CSSTransition\n                    in={match != null}\n                    timeout={300}\n                    classNames=\"page\"\n                    unmountOnExit\n                    >\n                    </CSSTransition>\n                )} */}\n                \n                <Component />\n                </Route>\n            ))}\n        </div>\n      </>\n    </Router>\n  );\n}\n\nexport default Menu;\n","import React from 'react'\r\nimport {CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport ImgplateList from '../ImgplateList'\r\nimport Imgplates from '../fixtures'\r\n\r\nfunction Game() {\r\n  return (\r\n    <>\r\n      <ImgplateList imgplates = {Imgplates} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","import React, { Component } from 'react';\nimport Index from './components/index';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Index />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/1.2ea5548a.jpg\";"],"sourceRoot":""}